# Generated by Django 2.2.27 on 2022-04-13 04:59
# and then modified a bit! :)
#
# Modifications:
# 1. Merge "AddField"s into "CreateModel" operations.
# 2. Remove the 'django_prometheus.models.Mixin' inheritance notation from the relevant operations. **
# 3. Reorder operations for the sake of readability.
#
# ** Motive of modification number 2:
# There is a class named 'Mixin' that is dynamically created by django-prometheus. Some models in Nemo have used it.
# The mixin overrides some methods to trace model CRUDs and hence has no effect on the model's schema. But, Django
# denotes the Mixin inheritance in the auto-generated CreateModel migrations and since the mixins are dynamically-created
# the resulting migrations encounter an AttributeError: module 'django_prometheus.models' has no attribute 'Mixin'.
# Unfortunately, there isn't a standard way to handle such a case, currently.
# For more details see: https://github.com/korfuri/django-prometheus/issues/42

import apps.dashboard.models.dory
import apps.utils.validation_utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions
import django.utils.timezone
import django_prometheus.models
import fernet_fields.fields
import hitcount.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MaturityModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, unique=True)),
                ('description', models.CharField(blank=True, max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='MaturityModelLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('name', models.CharField(max_length=500)),
                ('description', models.CharField(blank=True, max_length=2000)),
                ('maturity_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='levels', to='dashboard.MaturityModel')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EvaluationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('MA', 'Manual'), ('Devops Metrics', (('LT', 'Lead time'), ('DF', 'Deployment frequency'), ('TR', 'Time to restore'), ('CF', 'Change failure rate'))), ('Sonar Qube', (('TC', 'Commit stage test coverage'), ('ITC', 'Commit stage incremental test coverage (on new code)'))), ('General', (('ITCC', 'Is test coverage calculated'), ('DORY', 'Delegate the evaluation to the project ".nemo.yml" specification.')))], max_length=5)),
                ('validity_period_days', models.IntegerField(blank=True, default=0, help_text='In days', null=True)),
                ('checking_period_days', models.IntegerField(blank=True, default=0, help_text='In days', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MaturityModelItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('code', models.CharField(max_length=4)),
                ('name', models.CharField(max_length=500)),
                ('description', models.CharField(blank=True, max_length=2000)),
                ('acceptable_value', models.CharField(blank=True, max_length=200, null=True)),
                ('acceptable_value_type', models.CharField(blank=True, choices=[('SEC', 'Seconds'), ('PRC', 'Percentage')], max_length=5, null=True)),
                ('evaluation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='dashboard.EvaluationType')),
                ('maturity_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='dashboard.MaturityModel')),
                ('maturity_model_level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='dashboard.MaturityModelLevel')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, unique=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('maturity_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dashboard.MaturityModel')),
            ],
            bases=(models.Model, hitcount.models.HitCountMixin),
        ),
        migrations.CreateModel(
            name='ProjectAPIToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_token', to='dashboard.Project')),
            ],
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='environments', to='dashboard.Project')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='default_environment',
            field=models.OneToOneField(
                to='dashboard.Environment',
                blank=True,
                null=True,
                on_delete=models.deletion.SET_NULL,
                related_name='project_as_default_environment',
            ),
        ),
        migrations.CreateModel(
            name='CoverageReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(validators=[apps.utils.validation_utils.validate_percentage])),
                ('coverage_type', models.CharField(choices=[('OVR', 'Overall Coverage'), ('INC', 'Incremental Coverage (on new code)')], max_length=3)),
                ('creation_time', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('last_update_time', models.DateTimeField(auto_now=True)),
                ('version', models.TextField(blank=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coverage_reports', to='dashboard.Project')),
            ],
            options={
                'ordering': ('-last_update_time', '-creation_time'),
            },
        ),
        migrations.CreateModel(
            name='DoryEvaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_time', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('first_completed_poll_time', models.DateTimeField(blank=True, null=True)),
                ('submission_id', models.CharField(max_length=36)),
                ('maturity_item_dory_results_file', models.FileField(blank=True, upload_to=apps.dashboard.models.dory.get_maturity_item_dory_results_file_path)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dory_evaluations', to='dashboard.Project')),
            ],
        ),
        migrations.CreateModel(
            name='EvaluationReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('P', 'Pass'), ('F', 'Fail')], max_length=1)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('last_update_time', models.DateTimeField(auto_now=True)),
                ('latest_evaluation_time', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(blank=True, max_length=2000)),
                ('expected_value', models.CharField(blank=True, max_length=100, null=True)),
                ('current_value', models.CharField(blank=True, max_length=100, null=True)),
                ('value_type', models.CharField(blank=True, choices=[('SEC', 'Seconds'), ('PRC', 'Percentage')], max_length=5, null=True)),
                ('maturity_model_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.MaturityModelItem')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Project')),
                ('reporter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_update_time', '-creation_time'],
            },
        ),
        migrations.CreateModel(
            name='EvaluationRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('description', models.CharField(max_length=2000)),
                ('status', models.CharField(choices=[('P', 'Pending'), ('D', 'Done')], default='P', max_length=1)),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('maturity_model_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.MaturityModelItem')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Project')),
                ('closing_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.EvaluationReport')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProjectNotifSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receive_notifications', models.BooleanField(default=False)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SonarProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_base_url', models.CharField(help_text='E.g. https://sonarqube.com/api', max_length=127)),
                ('project_key', models.CharField(max_length=127)),
                ('auth_token', models.CharField(blank=True, max_length=40, null=True)),
                ('coverage_branch', models.CharField(blank=True, default='master', help_text='The branch that the coverage data reporting with', max_length=200)),
                ('nemo_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sonarprojects', to='dashboard.Project')),
            ],
        ),
        migrations.CreateModel(
            name='MaturityModelItemToggleRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disable', models.BooleanField()),
                ('reason', models.CharField(max_length=2000)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('maturity_model_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toggle_requests', to='dashboard.MaturityModelItem')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaturityModelItemToggleApproval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(blank=True, max_length=2000)),
                ('approved', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('maturity_model_item_toggle_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='approval', to='dashboard.MaturityModelItemToggleRequest')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('due_date', models.DateField()),
                ('creation_time', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('last_update_time', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('maturity_model_items', models.ManyToManyField(to='dashboard.MaturityModelItem')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='dashboard.Project')),
            ],
            options={
                'ordering': ('due_date',),
            },
        ),
        migrations.CreateModel(
            name='GitRepo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('git_http_url', models.URLField(help_text='E.g. https://gitlab.com/group/project.git')),
                ('default_branch', models.CharField(default='master', max_length=40)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('password', fernet_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('git_ecosystem', models.CharField(choices=[('GL', 'GitLab'), ('GH', 'GitHub'), ('GR', 'Gerrit'), ('O', 'Other...')], default='O', max_length=2)),
                ('changelist_collection_enabled', models.BooleanField(default=False)),
                ('nemo_project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gitrepo', to='dashboard.Project')),
            ],
        ),
        migrations.CreateModel(
            name='GitlabProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.IntegerField(blank=True, null=True)),
                ('token', models.CharField(blank=True, max_length=40)),
                ('default_branch', models.CharField(blank=True, max_length=200)),
                ('nemo_project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='version_control', to='dashboard.Project')),
            ],
        ),
        migrations.AddConstraint(
            model_name='evaluationtype',
            constraint=models.UniqueConstraint(condition=models.Q(_negated=True, kind='MA'), fields=('kind',), name='dashboard_maturitymodelitem_uk_non_manual_kind'),
        ),
        migrations.AddConstraint(
            model_name='userprojectnotifsetting',
            constraint=models.UniqueConstraint(fields=('user', 'project'), name='dashboard_userprojectnotifsetting_uk_user_and_project'),
        ),
        migrations.AddConstraint(
            model_name='maturitymodellevel',
            constraint=models.UniqueConstraint(fields=('maturity_model', 'name'), name='dashboard_maturitymodellevel_uk_maturity_model_and_name'),
        ),
        migrations.AddConstraint(
            model_name='maturitymodelitem',
            constraint=models.UniqueConstraint(fields=('maturity_model_level', 'name'), name='dashboard_maturitymodelitem_uk_maturity_model_level_and_name'),
        ),
        migrations.AddConstraint(
            model_name='maturitymodelitem',
            constraint=models.UniqueConstraint(fields=('maturity_model', 'code'), name='dashboard_maturitymodelitem_uk_maturity_model_and_code'),
        ),
        migrations.AddConstraint(
            model_name='evaluationreport',
            constraint=models.CheckConstraint(check=models.Q(latest_evaluation_time__gte=django.db.models.expressions.F('creation_time')), name='evaluation_report_latest_evaluation_time_gte_creation_time'),
        ),
        migrations.AddConstraint(
            model_name='evaluationreport',
            constraint=models.CheckConstraint(check=models.Q(last_update_time__gte=django.db.models.expressions.F('creation_time')), name='evaluation_report_last_update_time_gte_creation_time'),
        ),
        migrations.AddConstraint(
            model_name='environment',
            constraint=models.UniqueConstraint(fields=('project', 'name'), name='dashboard_environment_uk_project_and_name'),
        ),
        migrations.AddConstraint(
            model_name='doryevaluation',
            constraint=models.CheckConstraint(check=models.Q(first_completed_poll_time__gte=django.db.models.expressions.F('submission_time')), name='first_completed_poll_time_gte_submission_time'),
        ),
        migrations.AddConstraint(
            model_name='coveragereport',
            constraint=models.UniqueConstraint(condition=models.Q(_negated=True, version__exact=''), fields=('project', 'coverage_type', 'version'), name='unique_project_and_coverage_type_and_version'),
        ),
    ]
